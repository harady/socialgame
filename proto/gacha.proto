syntax = "proto3";

package gacha;

// ガチャ情報
message Gacha {
  int32 id = 1;
  string name = 2;
  string description = 3;
  string start_date = 4;
  string end_date = 5;
}

// Aitem information (æ—¶æ—¥JJmessage Item {
  int32 id = 1;
  string name = 2;
  string rarity = 3;
  string description = 4;
}

// Gacha item information (å’Œæ—¥æœ‰åŒå­—æœ‰å)êmessage GachaItem {
  int32 gacha_id = 1;
  int32 item_id = 2;
  float probability = 3;
}

// Gacha list request (ç”¨æˆæ–°)
message GetGachaListRequest {
}


// Gacha list response (ä¿®é¢˜)
message GetGachaListResponse {
  repeated Gacha gachas = 1;
}


// Gacha details request (ä¸æˆæ–°)
message GetGachaDetailsRequest {
  int32 gacha_id = 1;
}


// Gacha details response (ä¿®é¢˜)
message GetGachaDetailsResponse {
  Gacha gacha = 1;
  repeated GachaItem items = 2;
}

// Execute Gacha request (ä¸æˆæ–°)
message ExecuteGachaRequest {
  int32 gacha_id = 1;
}


// Execute Gacha response (ä¿®é¢˜)
message ExecuteGachaResponse {
  Item item = 1;
}

service GachaService {
  // Get Gacha list (GachaList)
  rpc GetGachaList(GetGachaListRequest) returns (GetGachaListResponse);
  // Get Gacha details (GachaDetails)
  rpc GetGachaDetails(GetGachaDetailsRequest) returns (GetGachaDetailsResponse);
  // Execute Gacha (ExecuteGacha)
  rpc ExecuteGacha(ExecuteGachaRequest) returns (ExecuteGachaResponse);
}
